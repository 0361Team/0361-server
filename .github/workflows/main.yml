name: 스프링 앱 배포
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Gradle 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          
      - name: JAR 파일 확인
        run: |
          # 빌드된 JAR 파일 확인
          echo "빌드된 JAR 파일 목록:"
          find build/libs -type f -name "*.jar" -exec ls -la {} \;
          # JAR 파일 명확하게 지정
          echo "JAR_FILE=$(find build/libs -type f -name "*.jar" | head -1)" >> $GITHUB_ENV
        
      - name: Google Cloud 인증
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: gcloud 설정
        uses: google-github-actions/setup-gcloud@v1
        
      - name: JAR 파일 복사 및 배포
        run: |
          gcloud compute ssh ${{ secrets.GCE_INSTANCE }} --zone=${{ secrets.GCE_ZONE }} --command="
            echo '서버에 연결됨, JAR 파일 확인:'
            JAR_FILE=\$(find ~/ -name \"*.jar\" -not -name \"*-plain.jar\" | head -1)
            echo \"찾은 JAR 파일: \$JAR_FILE\"
            
            if [ -z \"\$JAR_FILE\" ]; then
              echo \"오류: JAR 파일을 찾을 수 없습니다.\"
              exit 1
            fi
            
            sudo mkdir -p /opt/spring-app/
            sudo cp \"\$JAR_FILE\" /opt/spring-app/app.jar
            sudo chmod 755 /opt/spring-app/app.jar
            
            # 기존 프로세스 종료 (있다면)
            sudo pkill -f 'java -jar /opt/spring-app/app.jar' || true
            
            # 백그라운드 실행 (로그 없이)
            cd /opt/spring-app
            sudo nohup java -jar app.jar > /dev/null 2>&1 &
            
            echo '애플리케이션이 백그라운드에서 시작되었습니다.'
            
            # 프로세스 확인
            ps -ef | grep java
          "
