name: 스프링 앱 배포
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Gradle 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test
          
      - name: JAR 파일 확인
        run: |
          # 빌드된 JAR 파일 확인
          echo "빌드된 JAR 파일 목록:"
          find build/libs -type f -name "*.jar" -exec ls -la {} \;
          # JAR 파일 명확하게 지정
          echo "JAR_FILE=$(find build/libs -type f -name "*.jar" | head -1)" >> $GITHUB_ENV
        
      - name: Google Cloud 인증
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: gcloud 설정
        uses: google-github-actions/setup-gcloud@v1
        
      - name: Deploy JAR to VM
        run: |
          # 애플리케이션 JAR 파일을 VM에 복사
          gcloud compute scp ${{ env.JAR_FILE }} spring-app-instance:~/app/ --zone=${{ secrets.GCE_ZONE }}
          
          # 애플리케이션 디렉토리 구성
          gcloud compute ssh spring-app-instance --zone=${{ secrets.GCE_ZONE }} --command="mkdir -p ~/app/backup"
          
          # 기존 JAR 파일 백업 및 새 JAR 파일 배치
          gcloud compute ssh spring-app-instance --zone=${{ secrets.GCE_ZONE }} --command="if [ -f ~/app/application.jar ]; then mv ~/app/application.jar ~/app/backup/application-$(date +%Y%m%d%H%M%S).jar; fi"
          gcloud compute ssh spring-app-instance --zone=${{ secrets.GCE_ZONE }} --command="mv ~/app/*.jar ~/app/application.jar"
          
          # 서비스 재시작
          gcloud compute ssh spring-app-instance --zone=${{ secrets.GCE_ZONE }} --command="sudo systemctl restart spring-app"
          
          # 서비스 상태 확인
          gcloud compute ssh spring-app-instance --zone=${{ secrets.GCE_ZONE }} --command="sudo systemctl status spring-app"
